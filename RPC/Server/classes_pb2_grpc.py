# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import classes_pb2 as classes__pb2


class TesteServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddMatricula = channel.unary_unary(
                '/TesteService/AddMatricula',
                request_serializer=classes__pb2.Matricula.SerializeToString,
                response_deserializer=classes__pb2.Matricula.FromString,
                )
        self.UpdateNota = channel.unary_unary(
                '/TesteService/UpdateNota',
                request_serializer=classes__pb2.UpdateNotaRequest.SerializeToString,
                response_deserializer=classes__pb2.Matricula.FromString,
                )
        self.UpdateFaltas = channel.unary_unary(
                '/TesteService/UpdateFaltas',
                request_serializer=classes__pb2.UpdateFaltasRequest.SerializeToString,
                response_deserializer=classes__pb2.Matricula.FromString,
                )
        self.GetAlunos = channel.unary_unary(
                '/TesteService/GetAlunos',
                request_serializer=classes__pb2.AlunoRequest.SerializeToString,
                response_deserializer=classes__pb2.AlunoResponse.FromString,
                )
        self.GetDisciplinas = channel.unary_unary(
                '/TesteService/GetDisciplinas',
                request_serializer=classes__pb2.DisciplinaRequest.SerializeToString,
                response_deserializer=classes__pb2.DisciplinaResponse.FromString,
                )


class TesteServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddMatricula(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNota(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFaltas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlunos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDisciplinas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TesteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddMatricula': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMatricula,
                    request_deserializer=classes__pb2.Matricula.FromString,
                    response_serializer=classes__pb2.Matricula.SerializeToString,
            ),
            'UpdateNota': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNota,
                    request_deserializer=classes__pb2.UpdateNotaRequest.FromString,
                    response_serializer=classes__pb2.Matricula.SerializeToString,
            ),
            'UpdateFaltas': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFaltas,
                    request_deserializer=classes__pb2.UpdateFaltasRequest.FromString,
                    response_serializer=classes__pb2.Matricula.SerializeToString,
            ),
            'GetAlunos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlunos,
                    request_deserializer=classes__pb2.AlunoRequest.FromString,
                    response_serializer=classes__pb2.AlunoResponse.SerializeToString,
            ),
            'GetDisciplinas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDisciplinas,
                    request_deserializer=classes__pb2.DisciplinaRequest.FromString,
                    response_serializer=classes__pb2.DisciplinaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TesteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TesteService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddMatricula(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TesteService/AddMatricula',
            classes__pb2.Matricula.SerializeToString,
            classes__pb2.Matricula.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TesteService/UpdateNota',
            classes__pb2.UpdateNotaRequest.SerializeToString,
            classes__pb2.Matricula.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFaltas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TesteService/UpdateFaltas',
            classes__pb2.UpdateFaltasRequest.SerializeToString,
            classes__pb2.Matricula.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAlunos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TesteService/GetAlunos',
            classes__pb2.AlunoRequest.SerializeToString,
            classes__pb2.AlunoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDisciplinas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TesteService/GetDisciplinas',
            classes__pb2.DisciplinaRequest.SerializeToString,
            classes__pb2.DisciplinaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
